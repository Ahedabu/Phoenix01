@model IEnumerable<StoriesViewModel>
@using Phoenix01.Models;

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

@*@item.LoggedInUser.UserName*@
<table class="table">

    <tbody>
        @foreach (var item in Model)
        {
            <tr>

                @Html.DisplayFor(modelItem => item.ApplicationUser.UserName)

                <img src="@(item.ApplicationUser.UserImage)" alt="Sample Image" style="max-width:30px;height:auto;" />
            </tr>
            <tr>
                <h2>@Html.DisplayFor(modelItem => item.Title)</h2>
                <p><h4> @Html.DisplayFor(modelItem => item.StoryBody)</h4></p>
            </tr>

            <tr>
               
                <div class="message_form">
                  
                     
                     <div style="display: block;">
                        @if (item.Comments != null)
                        {  <h3>@item.Comments.Where(i => i.StoryId == item.ID).Count() Commentaires</h3>
                        @foreach (var comment in item.Comments)
                        {
                            @Html.DisplayFor(modelItem => comment.content)
                            <time aria-hidden="true" style="font-size:smaller"> @Html.DisplayFor(modelItem => comment.CreatedDate) </time>
                            @Html.DisplayFor(modelItem => item.LoggedInUser.UserName)
                            <br>
                        }
                        }
                    </div>

    @using (Html.BeginForm("Create", "Comment", FormMethod.Post))
    {



        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        Comment newComment = new Comment() { StoryId = item.ID, ApplicationUserId = item.ApplicationUserId };
        @Html.HiddenFor(model => newComment.ApplicationUserId)
        @Html.HiddenFor(model => newComment.StoryId)
        @Html.HiddenFor(model => newComment.id)
        @Html.TextAreaFor(model => newComment.content, new { @class = "form-control", @placeholder = "Your comment", @rows = "5" })
        @Html.ValidationMessageFor(model => newComment.content)
        <div class="form-group">
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>

        string csshasErrorComment = (ViewData.ModelState.Keys.Contains("newComment.Content") && ViewData.ModelState["newComment.Content"].Errors.Count() > 0 ? " has-error" : "");

    }


</div>

            </tr>
            <tr>
                ******************************************
               
                <a asp-action="Details" asp-route-id="@item.ID">Details</a>|
                @if (item.LoggedInUser == item.ApplicationUser)
                {
                    <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> 
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                }
            </tr>
            
            <br>
            <br>
            <br>
        }
    </tbody>

</table>
<br />






